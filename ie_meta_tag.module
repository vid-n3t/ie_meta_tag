<?php
/**
 * ie_meta_tag.module
 * Drupal Version Compatibility: D7
 *
 * Todo: 
 * Run through coder
 * Test functionality
 *
 */

#############################
# Inject the head meta data #
#############################
/**
 * Preprocesses the wrapping HTML.
 *
 * @param array &$variables
 *   Template variables.
 * ref: http://api.drupal.org/comment/18004#comment-18004
 */
if(variable_get('ie_meta_tag_enabled', TRUE)){
  function ie_meta_tag_preprocess_html(&$vars) {
    // Setup IE meta tag to force IE rendering mode
    //Vars:
    $ie_meta_tag_ie_flavor = variable_get('ie_meta_tag_ie_flavor', 'IE=edge');
    $ie_meta_tag_ie_chrome_option = variable_get('ie_meta_tag_ie_chrome_option', 'none');
    //concat the options if chrome isn't 'none'
    $ie_meta_tag_content = ( $ie_meta_tag_ie_chrome_option !== 'none' )?$ie_meta_tag_ie_flavor. ',' . $ie_meta_tag_ie_chrome_option):$ie_meta_tag_ie_flavor;

    switch( variable_get('ie_meta_tag_method', 'meta_tag') ) {
      case 'meta_tag':
        $ie_meta_tag_weight = variable_get('ie_meta_tag_weight','-99999');

        $ie_meta_tag_render = array(
          '#type' => 'html_tag',
          '#tag' => 'meta',
          '#attributes' => array(
            'content' =>  $ie_meta_tag_content,
            'http-equiv' => 'X-UA-Compatible',
          ),
          '#weight' => $ie_meta_tag_weight,
        );
        // Add header meta tag for IE to head
        drupal_add_html_head($ie_meta_tag_render, 'ie_meta_tag_render');
      break;
      case 'php':
        header("X-UA-Compatible: $ie_meta_tag_content");
      break;
    }//end switch( variable_get('ie_meta_tag_method', 'meta_tag') )
  }//end function ie_meta_tag_preprocess_html(&$vars)
}//end if(variable_get('ie_meta_tag_enabled', TRUE))


###########################################################
# Help                                                    #
###########################################################
/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path
 *   Which path of the site we're using to display help.
 * @param arg
 *   Array that holds the current path as returned from arg() function.
 */
function ie_meta_tag_help($path, $arg) {
  ie_meta_tag_debug_log('Running function ie_meta_tag_help');
  switch ($path) {
    case "admin/help#ie_meta_tag":
      return '<p>' . t("Custom module to inject the ie-edge meta tag into the html header.") . '</p>';
      break;
  }
}

/**
 * Page callback for admin/settings/peopleie_meta_tag.
 *
 * @see ie_meta_tag_menu()
 */
function ie_meta_tag_admin_settings($form, &$form_state) {
  ie_meta_tag_debug_log('Running function ie_meta_tag_admin_settings');
  // Checkbox to enable or disable the tab.
  $form['ie_meta_tag_enabled'] = array(
    '#type' => 'checkbox',
    '#default_value' => variable_get('ie_meta_tag_enabled', TRUE),
    '#title' => t('Enable tab'),
    '#description' => t('Activate the IE Meta Tag functionality. Active by default when enabled. You may not want this active if your theme already provides this functionality.'),
  );

  $form = array_merge($form, _ie_meta_tag_settings_form());
  $form = array_merge($form, _ie_meta_tag_debug_form());

  return system_settings_form($form);
}

/**
 * Helper to produce ie_meta_tag settings configuration.
 *
 * These are the settings purely related to how javascript is configured
 * and the text that is output.
 */
function _ie_meta_tag_settings_form() {
  ie_meta_tag_debug_log('Running function _ie_meta_tag_settings_form');

  $form['ie_meta_tag_method'] = array(
    '#type' => 'select',
    '#title' => t('Injection Method'),
    '#options' => array(
      'meta_tag' => t('Inject IE meta tag with drupal_add_html_head'),
      'php' => t('Use the PHP header method'),
    ),
    '#default_value' => variable_get('ie_meta_tag_method', 'meta_tag'),
    '#description' => t('Choose the type of method to use when affecting the html head. Other options not supported here: Server-side (Apache, .htaccess).'),
  );

  $form['ie_meta_tag_ie_flavor'] = array(
    '#type' => 'select',
    '#title' => t('IE Flavor of Choice'),
    '#options' => array(
      'IE=edge' => t('IE=edge'),
      'IE=10' => t('IE=10'),
      'IE=EmulateIE10' => t('IE=EmulateIE10'),
      'IE=9' => t('IE=9'),
      'IE=EmulateIE9' => t('IE=EmulateIE9'),
      'IE=8' => t('IE=8'),
      'IE=EmulateIE8' => t('IE=EmulateIE8'),
      'IE=7' => t('IE=7'),
      'IE=EmulateIE7' => t('IE=EmulateIE7'),
      'IE=5' => t('IE=5'),
    ),
    '#default_value' => variable_get('ie_meta_tag_ie_flavor', 'IE=edge'),
    '#description' => t('Choose the flavor of IE tag to update the html head. ' . l(t('Interesting on stackoverflow'), 'http://stackoverflow.com/questions/6771258/whats-the-difference-if-meta-http-equiv-x-ua-compatible-content-ie-edge', array('attributes' => array('target'=>'_blank')))),
  );

  $form['ie_meta_tag_ie_chrome_option'] = array(
    '#type' => 'select',
    '#title' => t('Chrome Option'),
    '#options' => array(
      'none' => t('None'),
      'chrome=1' => t('chrome=1   - Always active'),
      'chrome=IE7' => t('chrome=IE7 - Active for IE major version 7 or lower'),
      'chrome=IE8' => t('chrome=IE8 - Active for IE major version 8 or lower'),
    ),
    '#default_value' => variable_get('ie_meta_tag_ie_chrome_option', 'none'),
    '#description' => t('Choose a chome option or leave it set to none. ' . l(t('More info on chromium.org'), 'http://www.chromium.org/developers/how-tos/chrome-frame-getting-started', array('attributes' => array('target'=>'_blank')))),
  );

  $form['ie_meta_tag_weight'] = array(
    '#type' => 'textfield',
    '#title' => t('Weight'),
    '#default_value' => variable_get('ie_meta_tag_weight','-99999'),
    '#description' => t('Choose the weight of the meta tag. Choose a positive or negative number (integer or decimal). Some experience suggests that this tag must be the first one for it to be effective. The Default is -99999.'),
    '#size' => 10,
    '#element_validate' => array('_ie_meta_tag_weight_is_numeric'),
  );

  return $form;
}//end function _ie_meta_tag_settings_form()

/**
 * Helper to produce ie_meta_tag debug configuration.
 *
 */
function _ie_meta_tag_debug_form() {
  ie_meta_tag_debug_log('Running function _ie_meta_tag_debug_form');
  // Debugging - fieldset for debug related fields
  $form['ie_meta_tag_debug'] = array(
    '#type' => 'fieldset',
    '#title' => t('Debugging'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

    $form['ie_meta_tag_debug']['ie_meta_tag_debug_message'] = array(
      '#type' => 'checkbox',
      '#title' => t('Enable debugging message feedback'),
      '#description' => t('Displays feedback in Drupal Messages'),
      '#default_value' => variable_get('ie_meta_tag_debug_message', FALSE),
      '#required' => FALSE
    );

    $form['ie_meta_tag_debug']['ie_meta_tag_debug_reporting'] = array(
      '#type' => 'checkbox',
      '#title' => t('Enable watchdog debugging feedback'),
      '#description' => t('Displays feedback messages in the Recent Log Entries (watchdog) Report'),
      '#default_value' => variable_get('ie_meta_tag_debug_reporting', FALSE),
      '#required' => FALSE
    );

  return $form;
} //function _ie_meta_tag_debug_form()

/**
 * Helper to output debug messages.
 *
 * ie_meta_tag_debug_log($errMsgArr(array), [$errLabel(string)='ie_meta_tag', $errSeverity(string)='status|warning|error', $force(bool)=FALSE])
 *
 */
function ie_meta_tag_debug_log($errMsgArr, $errLabel='ie_meta_tag', $errSeverity='status', $force=FALSE) {
  $watchdog_levels=watchdog_severity_levels();
  if ( $errMsgArr ) {
    if ( ! is_array($errMsgArr) && $errMsgArr !== ""){
      #$errMsgArr = implode(',', $errMsgArr);
      $errMsgArr = array($errMsgArr);
    }//end if ( ! is_array($errMsgArr) )
    foreach ( $errMsgArr as $errMsg ) {
      if ( variable_get('ie_meta_tag_debug_message', FALSE) || $force ){
        drupal_set_message(t($errMsg), $errSeverity);
      }//end if
      if ( variable_get('ie_meta_tag_debug_reporting', FALSE) || $force ) {
        #watchdog($errLabel,$errMsgArr);
        watchdog($errLabel,$errMsg,array(),array_search($errSeverity,$watchdog_levels));
      }//end if
    }//end loop
  }//end if $errMsgArr
}//function _ie_meta_tag_debug_form()



###########################################################
# Validation Functions                                    #
###########################################################
/**
 * function _ie_meta_tag_is_numeric($element, &$form_state)
 * Validate if an entry is numeric
 */
function _ie_meta_tag_is_numeric($element, &$form_state) {
  if (!empty($element['#value']) && !is_numeric($element['#value'])) {
    form_error($element, t('The "!name" option must contain a valid number. You may either leave the text field empty or enter a string like "-99999", "20" or "10000".', array('!name' => t($element['title']))));
  }
